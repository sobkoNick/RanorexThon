///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Hackaton
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MoreThan10Validation recording.
    /// </summary>
    [TestModule("5cbb6689-b37b-4f6c-ae97-c33de9ddfd0e", ModuleType.Recording, 1)]
    public partial class MoreThan10Validation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HackatonRepository repository.
        /// </summary>
        public static HackatonRepository repo = HackatonRepository.Instance;

        static MoreThan10Validation instance = new MoreThan10Validation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MoreThan10Validation()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MoreThan10Validation Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 42;49", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(0));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("42;49");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 42;52", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(1));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("42;52");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 42;52", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(2));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("42;52");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 42;52", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(3));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("42;52");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 42;42", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(4));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("42;42");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 32;47", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(5));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("32;47");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 32;47", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(6));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("32;47");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 32;47", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(7));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("32;47");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 30;47", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(8));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("30;47");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 40;54", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(9));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("40;54");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.CartPlus' at 25;34", repo.ComHackatonEpamTahackaton.CartPlusInfo, new RecordItemIndex(10));
            repo.ComHackatonEpamTahackaton.CartPlus.Touch("25;34");
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='10 products remaining!') on item 'ComHackatonEpamTahackaton.ErrorCount'.", repo.ComHackatonEpamTahackaton.ErrorCountInfo, new RecordItemIndex(11));
            Validate.Attribute(repo.ComHackatonEpamTahackaton.ErrorCountInfo, "Text", "10 products remaining!");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key '{BACK}' press on 'ComHackatonEpamTahackaton.CartActivity'.", repo.ComHackatonEpamTahackaton.CartActivityInfo, new RecordItemIndex(12));
            repo.ComHackatonEpamTahackaton.CartActivity.PressKeys("{BACK}");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
