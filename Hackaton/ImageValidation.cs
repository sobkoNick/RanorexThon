///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Hackaton
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ImageValidation recording.
    /// </summary>
    [TestModule("6a0f9d67-b2c7-4a03-9d48-a0389130d142", ModuleType.Recording, 1)]
    public partial class ImageValidation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HackatonRepository repository.
        /// </summary>
        public static HackatonRepository repo = HackatonRepository.Instance;

        static ImageValidation instance = new ImageValidation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ImageValidation()
        {
            picture = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ImageValidation Instance
        {
            get { return instance; }
        }

#region Variables

        string _picture;

        /// <summary>
        /// Gets or sets the value of variable picture.
        /// </summary>
        [TestVariable("5178960b-30c3-4a69-be77-c23820ad0772")]
        public string picture
        {
            get { return _picture; }
            set { _picture = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'picture' from item 'ComHackatonEpamTahackaton.BskImgThird' and assigning its value to variable 'picture'.", repo.ComHackatonEpamTahackaton.BskImgThirdInfo, new RecordItemIndex(0));
            picture = repo.ComHackatonEpamTahackaton.BskImgThird.Element.GetAttributeValueText("picture");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating CompareImage (Screenshot: 'Screenshot1' with region {X=0,Y=0,Width=294,Height=406}) on item 'ComHackatonEpamTahackaton.BskImgThird'.", repo.ComHackatonEpamTahackaton.BskImgThirdInfo, new RecordItemIndex(1));
            //Validate.CompareImage(repo.ComHackatonEpamTahackaton.BskImgThirdInfo, BskImgThird_Screenshot1, BskImgThird_Screenshot1_Options);
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComHackatonEpamTahackaton.BskImgThird' at 131;182", repo.ComHackatonEpamTahackaton.BskImgThirdInfo, new RecordItemIndex(2));
            repo.ComHackatonEpamTahackaton.BskImgThird.Touch("131;182");
            Delay.Milliseconds(1000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating ContainsImage (Screenshot: 'packScreen1' with region {X=0,Y=0,Width=294,Height=406}) on item 'ComHackatonEpamTahackaton.CartProduct'.", repo.ComHackatonEpamTahackaton.CartProductInfo, new RecordItemIndex(3));
            Validate.ContainsImage(repo.ComHackatonEpamTahackaton.CartProductInfo, CartProduct_packScreen1, CartProduct_packScreen1_Options);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
        CompressedImage BskImgThird_Screenshot1
        { get { return repo.ComHackatonEpamTahackaton.BskImgThirdInfo.GetScreenshot1(new Rectangle(0, 0, 294, 406)); } }

        Imaging.FindOptions BskImgThird_Screenshot1_Options
        { get { return Imaging.FindOptions.Parse("1;None;0,0,294,406;True;10000000;0ms"); } }

        CompressedImage CartProduct_packScreen1
        { get { return repo.ComHackatonEpamTahackaton.CartProductInfo.GetpackScreen1(new Rectangle(0, 0, 294, 406)); } }

        Imaging.FindOptions CartProduct_packScreen1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
